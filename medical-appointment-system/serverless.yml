service: medical-appointment-system

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage,'desa'}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:*
        - sqs:*
        - ses:SendEmail
      Resource: "*"
  environment:
    PE_QUEUE_URL:
      Ref: PEAppointmentNotifyQueue
    CL_QUEUE_URL:
      Ref: CLAppointmentNotifyQueue

package:
  individually: true
  exclude:
    - node_modules/**
    - ./**.sh
    - ./**.yml
    - ./**.json
plugins:
  - serverless-dynamodb-local
  - serverless-offline

functions:
  - ${file(appointment-system/lambda_definition.yml)}
  - ${file(appointment-notify/lambda_definition.yml)}

resources:
  Resources:
    # Tablas DynamoDB
    PEPatientTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: pe-patient
        AttributeDefinitions:
          - AttributeName: document
            AttributeType: S
        KeySchema:
          - AttributeName: document
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    CLPatientTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: cl-patient
        AttributeDefinitions:
          - AttributeName: document
            AttributeType: S
        KeySchema:
          - AttributeName: document
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    PEAppointmentTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: pe-appointment
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: status
            AttributeType: S
          - AttributeName: speciality
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: status__index
            KeySchema:
              - AttributeName: status
                KeyType: HASH
              - AttributeName: speciality
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    DoctorTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: doctor
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: country
            AttributeType: S
          - AttributeName: speciality
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: country_speciality__index
            KeySchema:
              - AttributeName: country
                KeyType: HASH
              - AttributeName: speciality
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    DoctorAppointmentTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: appointment-doctor
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: doctor
            AttributeType: S
          - AttributeName: date
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: doctor__date__index
            KeySchema:
              - AttributeName: doctor
                KeyType: HASH
              - AttributeName: date
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    # Colas SQS
    PEAppointmentNotifyQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: pe-appointment-notify

    CLAppointmentNotifyQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: cl-appointment-notify

custom:
  env:
    desa: desa
    prod: prod
    test: test